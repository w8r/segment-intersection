import{d as C,a as W,r as X}from"./vendor.89ed1c77.js";const G=function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))g(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const f of s.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&g(f)}).observe(document,{childList:!0,subtree:!0});function i(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerpolicy&&(s.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?s.credentials="include":e.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function g(e){if(e.ep)return;e.ep=!0;const s=i(e);fetch(e.href,s)}};G();const A=[[0,0],[0,0]];function Y(t,n,i,g,e,s,f,a,x=1e-6){const o=i-t,c=g-n,p=f-e,w=a-s,v=e-t,M=s-n;let y=o*w-c*p,D=y*y;const _=o*o+c*c,j=p*p+w*w;if(D>x*_*j){const l=(v*w-M*p)/y;if(l<0||l>1)return 0;const u=(v*c-M*o)/y;if(u<0||u>1)return 0;const L=A[0];return l===0||l===1?(L[0]=t+l*o,L[1]=n+l*c):u===0||u===1?(L[0]=e+u*p,L[1]=s+u*w):(L[0]=t+l*o,L[1]=n+l*c),1}const B=v*v+M*M;if(y=v*c-M*o,D=y*y,D>x*_*B)return 0;const E=(o*v+c*M)/_,H=E+(o*p+c*w)/_;let b=0,F=0;const z=Math.min(E,H),K=Math.max(E,H),q=0,O=1;let h=0;if(O<z||q>K?h=0:O>z?q<K?(b=q<z?z:q,F=O>K?K:O,h=2):(b=q,h=1):(b=O,h=1),h>0){const l=A[0];if(l[0]=t+b*o,l[1]=n+b*c,h===2){const u=A[1];u[0]=t+F*o,u[1]=n+F*c}}return h}window.findIntersection=Y;window.intersection=A;const I=window.innerWidth,N=window.innerHeight,d=20,m=15,r=new Array(4).fill(0).map((t,n)=>({x:k(Math.random()*(I-m*2),d),y:k(Math.random()*(N-m*2),d),index:n})),J=C().on("drag",R),P=W("body").append("svg").attr("width",I).attr("height",N);P.append("g").attr("class","vertical").selectAll(".vertical").data(X(1,I/d)).enter().append("line").attr("x1",t=>t*d).attr("y1",0).attr("x2",t=>t*d).attr("y2",N);P.append("g").attr("class","horizontal").selectAll(".horizontal").data(X(1,N/d)).enter().append("line").attr("x1",0).attr("y1",t=>t*d).attr("x2",I).attr("y2",t=>t*d);const Q=P.append("g").selectAll("line").data([r[0],r[2]]).enter().append("line").attr("class","segment").attr("x1",t=>t.x).attr("y1",t=>t.y).attr("x2",t=>r[t.index+1].x).attr("y2",t=>r[t.index+1].y);P.selectAll("circle").data(r).enter().append("circle").attr("cx",t=>t.x).attr("cy",t=>t.y).attr("r",m).call(J);const S=P.append("g").selectAll("circle").data(A).enter().append("circle").attr("class","intersection").classed("hidden",!0).attr("cx",t=>t[0]).attr("cy",t=>t[1]).attr("r",5);function R({x:t,y:n},i){const g=k(Math.max(m,Math.min(I-m,t)),d),e=k(Math.max(m,Math.min(N-m,n)),d);r[i.index].x=i.x=g,r[i.index].y=i.y=e,Q.filter((a,x)=>i.index<2?x===0:x===1).attr("x1",a=>a.x).attr("y1",a=>a.y).attr("x2",a=>r[a.index+1].x).attr("y2",a=>r[a.index+1].y),W(this).attr("cx",i.x).attr("cy",i.y);const f=Y(r[0].x,r[0].y,r[1].x,r[1].y,r[2].x,r[2].y,r[3].x,r[3].y);S.data(A).attr("cx",a=>a[0]).attr("cy",a=>a[1]),f===0?S.classed("hidden",!0):f===1?S.filter((a,x)=>x===0).classed("hidden",!1):f===2&&S.classed("hidden",!1)}function k(t,n){return t%n<n/2?t-t%n:t+n-t%n}
